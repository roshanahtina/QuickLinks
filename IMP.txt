:: ChatGPTT ::

https://platform.openai.com/overview

https://chat.openai.com

Suggest fun activities
for a team-building day with remote employees●
for a family of 4 to do indoors on a rainy day●
Brainstorm names
for an orange cat we're adopting from the shelter●
for my fantasy football team●
Write a text
asking a friend to be my plus-one at a wedding●
that goes with a kitten gif for a friend having a rough day●
Draft an email
to request a quote from local plumbers●
requesting a deadline extension for my project●
Write a thank-you note
to my interviewer●
to our babysitter for the last-minute help●
Plan a trip
to experience Seoul like a local●
to see the northern lights in Norway●
Summarize this article
into three key points●
as a table of pros and cons●
Improve my post
for hiring a store associate●
for selling a used vacuum in good condition●
Help me debug
why the linked list appears empty after I've reversed it●
a Python script automating daily reports●
Recommend a dish
to impress a date who's a picky eater●
to bring to a potluck●
Give me ideas
for what to do with my kids' art●
for a customer loyalty program in a small bookstore●
Help me pick
an outfit that will look good on camera●
a gift for my dad who loves fishing●
ChatGPT ●

-> IBBBM Prep Course:
https://ibm-cloud-prep.yourlearning.ibm.com

-> O'REILLY:
https://learning.oreilly.com/home-new/

-> REDHAT DOCS: 
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_for_real_time/8/html/optimizing_rhel_8_for_real_time_for_low_latency_operation/index
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9

-> luth-LinuxUnderTheHood
https://on24static.akamaized.net/event/43/46/99/7/rt/1/documents/resourceList1699274238616/luthnov231699274238616.pdf

-> Linux under the Hood [OR] Linux-Security
https://github.com/roshanahtina/Linux-Security/blob/main/resources.txt
https://on24static.akamaized.net/event/43/12/45/6/rt/1/documents/resourceList1699376138797/linsec.pdf

-> Linux Performance Optimization
https://on24static.akamaized.net/event/43/47/01/0/rt/1/documents/resourceList1698335954860/linuxperformance73231698335953946.pdf

-> Linux Troubleshooting
https://on24static.akamaized.net/event/43/47/02/6/rt/1/documents/resourceList1698935226186/linuxtroubleshooting613221698935226186.pdf
https://github.com/roshanahtina/Linux-Troubleshooting
 -> Fixing boot problem:
     Login Shell
     |
     Services
     | <- systemd.unit=rescue.target
     Early boot
     | <- systemd.unit=emergency.target
     init=systemd
     | <- rd.break (RH) 
     | <- init=/bin/bash
     initramfs kernel
     | 
     GRUB2
     | <- rescue disk
     Firmware (BIOS/EFI|UEFI)

-> Linux Fundamentals BootCamp:
https://on24static.akamaized.net/event/43/33/82/1/rt/1/documents/resourceList1697480993618/linuxfundamentals516231690989321545.pdf
https://on24static.akamaized.net/event/43/33/82/2/rt/1/documents/resourceList1697482662436/linuxfundamentals516231690989321545.pdf

-> RHCSA Crash Course
https://on24static.akamaized.net/event/43/38/49/7/rt/1/documents/resourceList1698414414376/rhcsa911698414413682.pdf

-> *upcoming live courses*
https://github.com/roshanahtina/rhcsa/blob/master/resources.txt

https://learning.oreilly.com/videos/linux-fundamentals-2nd/9780137929313/

-> Ansible in 3 weeks
https://on24static.akamaized.net/event/43/11/60/3/rt/1/documents/resourceList1697541567561/ansiblein3weeksstudentversion3211697541565541.pdf


-> Bash Scripting in 4 Hours
https://on24static.akamaized.net/event/43/33/85/8/rt/1/documents/resourceList1698925382057/livebashscripting08231698925382057.pdf
-> Mastering-Bash-Shell-Scripting-Automate-your-daily-tasks
https://github.com/roshanahtina/Mastering-Bash-Shell-Scripting-Automate-your-daily-tasks/blob/main/Section%202/Assignment-01-Solution-Script/assignment01-report-solution.sh

-> https://learning.oreilly.com/videos/bash-shell-scripting/9780137689064/9780137689064-BSS2_01_03_01/
-> https://learning.oreilly.com/videos/complete-bash-shell/9781800209695/9781800209695-video18_1/
-> https://learning.oreilly.com/videos/bash-scripting-fundamentals/9780134541730/9780134541730-BSHF_00_00/
-> https://learning.oreilly.com/videos/learn-bash-shell/9781835080948/9781835080948-video1_1/
-> https://learning.oreilly.com/videos/mastering-linux-command/9781800204027/9781800204027-video14_1/


-> Master title style
https://on24static.akamaized.net/event/43/47/05/7/rt/1/documents/resourceList1699971479321/containerssep231699971479321.pdf

:: AWS ::
-> AWS Solutions Architect - Associate Certification Crash Course (SAA-C03):
https://on24static.akamaized.net/event/43/53/43/6/rt/1/documents/resourceList1699885803277/awssolutionsarchitectassociatecertificationsaac03latest1699885803277.pdf
https://github.com/arpcefxl/aws-saa-certification
-> AWS Certified Solutions Architect - Professional (SAP-C02):
https://learning.oreilly.com/course/aws-certified-solutions/9780138319205/ 
https://aws.amazon.com/well-architected-tool/
-><- AWS Cheat Sheets: https://tutorialsdojo.com/

-> aws-security-specialty-certification:
https://on24static.akamaized.net/event/43/59/42/4/rt/1/documents/resourceList1700506606961/awssecurityspecialtycertscsc02latestlive1700506606961.pdf

-> https://learning.oreilly.com/videos/amazon-web-services/9780137928521/9780137928521-AWS3_03_06_01/

-> Recommended preparation (AWS Certified Solutions Architect - Associate SAA-C03 Bootcamp):
(https://learning.oreilly.com/live-events/aws-certified-solutions-architect-associate-saa-c03-bootcamp/0636920055432/0636920099238/)

Week 1: Read the technical brief on AWS global infrastructure (website)
Week 2: Read the technical brief on AWS management services (website)
Week 3: Read the technical brief on AWS networking (website)
Week 4: Read the technical brief on AWS virtual servers (website)
Week 5: Read the technical brief on AWS storage (website)
Week 6: Read the technical brief on AWS Auto Scaling (website)
Recommended follow-up:

Read AWS Certified Solutions Architect Associate All-in-One Exam Guide, Second Edition (Exam SAA-C02)) (book)
Read Learning Amazon Web Services (AWS): A Hands-On Guide to the Fundamentals of the AWS Cloud (book)

-> RegEx:
https://learning.oreilly.com/library/view/mastering-regular-expressions/0596528124/
https://learning.oreilly.com/library/view/sed-awk/1565922255/

-> Paste Bin:
https://pastebin.com/jxEUv9Kc - CKA day1 oct 23
https://pastebin.com/TJtQjGDk - RHCSA nov23 day2
https://pastebin.com/mDGGV9H2 - scripting nov23

:: VMware ::
-> VMware Hands-on Labs
https://discovery.vmware.com/page/ds-hands-on-labs?menu=overview



:: Kubernetes ::
-> Securing Kubernetes for Production
https://on24static.akamaized.net/event/43/53/42/8/rt/1/documents/resourceList1700504792291/kubernetessecurity11700504792291.pdf
https://github.com/AdminTurnedDevOps/PearsonCourses/tree/main
https://us.norton.com/blog/emerging-threats/cybersecurity-statistics#:~:text=However%2C%20considering%20there%20are%20around,people%20being%20hacked%20per%20year
https://www.redhat.com/en/resources/state-kubernetes-security-report-2023
https://owasp.org/www-project-kubernetes-top-ten/
https://www.cisecurity.org/cis-benchmarks
https://www.cisecurity.org/benchmark/kubernetes
https://github.com/AdminTurnedDevOps/PearsonCourses/blob/main/Kubernetes-Security/Section3/lab/install-istio.md
https://docs.tigera.io/calico/latest/network-policy/encrypt-cluster-pod-traffic
https://kubernetes.io/docs/tasks/administer-cluster/kubeadm/kubeadm-upgrade/ https://learn.microsoft.com/en-us/azure/architecture/operator-guides/aks/aks-upgrade-practices https://platform9.com/blog/kubernetes-upgrade-the-definitive-guide-to-do-it-yourself/ https://learn.microsoft.com/en-us/azure/aks/upgrade-cluster?tabs=azure-cli
https://www.cvedetails.com/vulnerability-list/vendor_id-15867/product_id-34016/Kubernetes-Kubernetes.html
https://github.com/AdminTurnedDevOps/PearsonCourses/blob/main/Kubernetes-Security/Section4/lab/labinstructions.md
https://github.com/AdminTurnedDevOps/PearsonCourses/tree/main/Kubernetes-Security/Section5/lab
https://github.com/AdminTurnedDevOps/PearsonCourses/blob/main/Kubernetes-Security/Section6/lab/labinstructions.md

:: GIT ::
-> https://on24static.akamaized.net/event/43/59/37/3/rt/1/documents/resourceList1701126828143/git41labs1701126828143.pdf - Git in Four Weeks - Week 1
-> https://on24static.akamaized.net/event/43/59/37/3/rt/1/documents/resourceList1701126839079/git42labs1701126839079.pdf - Git in Four Weeks - Week 2
-> https://on24static.akamaized.net/event/43/59/37/3/rt/1/documents/resourceList1701043170963/gitin4weekspart11701043170963.pdf
-> 


:: CHATGPT (Gerenative Pre-Trained Transformation) ::
-> Prompt-Engineering-for-Everyone-with-ChatGPT-and-GPT4
https://github.com/roshanahtina/Prompt-Engineering-for-Everyone-with-ChatGPT-and-GPT4
https://learning.oreilly.com/videos/prompt-engineering-for/9781805122005/9781805122005-video2_1/
-> https://github.com/roshanahtina/quick-start-guide-to-llms
-> https://github.com/PacktPublishing/Python-A-Z-Learn-Python-By-Building-15-Projects-and-ChatGPT


-> RPMDB busted
sudo mkdir /var/lib/rpm/backup
sudo cp -a /var/lib/rpm/__db* /var/lib/rpm/backup/
sudo rm -f /var/lib/rpm/__db.[0-9][0-9]*
sudo rpm --quiet -qa; sudo rpm --rebuilddb; sudo yum clean all

-> SAR: dnf install sysstat -y
[root@~]# systemctl list-unit-files -t timer
UNIT FILE                      STATE    PRESET  
dnf-makecache.timer            enabled  enabled 
fstrim.timer                   disabled disabled
insights-client.timer          disabled disabled
logrotate.timer                enabled  enabled 
nm-cloud-setup.timer           enabled  disabled
sysstat-collect.timer          enabled  disabled
sysstat-summary.timer          enabled  disabled
systemd-sysupdate-reboot.timer disabled disabled
systemd-sysupdate.timer        disabled disabled
systemd-tmpfiles-clean.timer   static   -       

10 unit files listed.
[root@~ ~]# systemctl status sysstat-collect.timer
○ sysstat-collect.timer - Run system activity accounting tool every 10 minutes
     Loaded: loaded (/usr/lib/systemd/system/sysstat-collect.timer; enabled; p>
     Active: inactive (dead)
    Trigger: n/a
   Triggers: ● sysstat-collect.service
[root@ ~]# systemctl start sysstat-collect.timer
[root@ ~]# systemctl start sysstat-collect.service
[root@ ~]# systemctl status sysstat-collect.timer
● sysstat-collect.timer - Run system activity accounting tool every 10 minutes
     Loaded: loaded (/usr/lib/systemd/system/sysstat-collect.timer; enabled; p>
     Active: active (running) since Tue 2023-11-14 16:29:05 UTC; 1min 13s ago


:: FOR LOOP ::

for i in $(awk '{print $1}' REQFILE); do host $i; done
for i in $(awk 'NR%2==1 {print $1}' REQFILE\[gh\]); do dig NS $i.ser.example.com. +noall +answer; done
for i in $(awk 'NR%2==0 {print $1}' REQFILE); do host $i.ser.example.com.; done


:: NETWORK-SWITCH ::
Switchport descriptions
    sh int desc
Switchport statistics
    sh int stat
    sh int stat | grep "Et3[78]"
    show interfaces Et12[or]43-48 status
ir01b.sr08.DCCODE#sh int stat | grep kickservername
is18.sr01.DCCODE#show interface Et44,Et43 switchport

Narrowing your output
    For MAC address lookups: 
    sh mac add | inc xxxx.yyyy.dddd
        is04.sr01.DCCODE# show mac address-table | include 0cc4.7a66.6130

#
Change the switchport VLAN from to another
no switchport access vlan <port no>
switchport access vlan <port no>
no shutdown

STEP (1)
#configure terminal
#int Ethernet25
#shutdown
 
STEP (2)
#configure terminal
#default interface ethernet <port number> --> BUUUUUUUT be very careful


grep -riIF 2401:c900:2700:8800::1a /etc/sysconfig/network-scripts/
But a ps –ef shows different No, splunk is not running…
$ ps -ef|grep splunk|grep -v grep
Seems different processes have taken over these pids…
$ ps -ef|egrep "14371|14372"


ip -o -6 r sh dev eth0 | grep '\<metric 1\>'
default via 2401:c900:2700:8800::1 metric 1 pref medium

Route:
nmcli con edit eth2
ping -c 1 -I eth2 kickservername

nmcli con modify eth2 ipv4.gateway '172.1.1.1' OR
nmcli con modify eth2 ipv4.gateway ''
ssh  -l rmunavar -b 172.1.1.1 kickservername

##
SAVE the Changes in Switch::

is03.sr01.dccode#copy running-config startup-config
Destination filename [startup-config]?  ---->>> Just enter it
%Error copying nvram:y (Invalid argument)
is03.sr01.dccode#copy running-config startup-config
Destination filename [startup-config]?
Building configuration...
[OK]
0 bytes copied in 2.474 secs (0 bytes/sec)
is03.sr01.ams01#

is04.sr01.dccode# copy running-config startup-config
[########################################] 100%
Copy complete, now saving to disk (please wait)...
is04.sr01.dccode#


:: MYSQL DB QUERY::
# -> A
select host_name from services where host_name like 'kickservername%';
select host_name from services where host_name like '%';


# -> B
select host_name,id from hosts where host_name like 'kickservername%';
delete from hosts where host_name='kickservername.dccode' and id='1662';

select host_name,id from hosts where host_name like '%';
delete from hosts where host_name='' and id='';

# -> C
select id, datacenter,members, hostgroup_name, hostgroup_members from hostgroups where members like 'kickservername.dccode%';
update hostgroups set members = REPLACE(members,'kickservername.dccode','kickservername.') where members like 'kickservername.dccode%' and datacenter = 'ams01' and id=24;

select id, datacenter,members, hostgroup_name, hostgroup_members from hostgroups where members like '%';
update hostgroups set members = REPLACE(members,'','') where members like '%' and datacenter = '' and id=;


INSERT INTO hostgroups (datacenter, hostgroup_name, alias, members) VALUES ("wdc04","imsutil_servers","imsutil_servers","");

mysql> INSERT INTO hostgroups (datacenter, hostgroup_name, alias, members) VALUES ("wdc04","kickservername","kickservername","kickservernamed,kickservernamee,kickservernamef");
Query OK, 1 row affected (0.01 sec)


mysql> update hostgroups set members = 'kickservernamed,kickservernamee,kickservernamef' where id=1606;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select id, datacenter,members, hostgroup_name, hostgroup_members from hostgroups where hostgroup_name = 'kickservername_servers' and datacenter like 'DCCODE04%';
+------+------------+-------------------------------------------------+-----------------+-------------------+
| id   | datacenter | members                                         | hostgroup_name  | hostgroup_members |
+------+------------+-------------------------------------------------+-----------------+-------------------+
| 1606 | DCCODE04   | kickservernamed,kickservernamee,kickservernamef |    util_servers | NULL              |
+------+------------+-------------------------------------------------+-----------------+-------------------+
1 row in set (0.00 sec)

#
MariaDB [nagios]> select id, datacenter, hostgroup_name, members, hostgroup_members from hostgroups where hostgroup_name like 'kickservername';
Empty set (0.00 sec)

MariaDB [nagios]>

:: KNIFE COMMADS ::
cat /etc/chef/base.json
cat /etc/chef/client.rb
cat ~/.chef/knife.rb
knife status 'hostname:server05*' -r
knife cookbook list | grep apt
knife cookbook list | grep yum
vim ../.chef/knife.rb
knife download /cookbooks/apt --dry-run
knife cookbook list | grep yum
knife ssl check
knife search server05.example.com
knife search -a server.nagios.nagios_config.service_check_timeout 'hostname:server05.example.com*'
knife search 'hostname:server05' | grep -E 'FQDN|Platform|IP|Role|Tags'
knife status 'hostname:*shell* AND role:*_base' -r | grep -v par
knife node show server05.example.com
knife node show frontend01 --format json -a ipaddress
knife node show frontend01 --format json
Knife SET ROLE command:
knife node run_list set server05.ex.local 'role[role_base]'
knife status -r 'hostname:server05*'
chef-client -o 'recipe[ohai],recipe[autodiscovery]' || systemctl reload nginx
for node in server05{a..d}.exa.local ; do knife node run_list set ${node} role[server05_sudo] ;done
while read n; do ping $n -c 1; done < server05.txt 
for i in $(awk 'NR%2==1 {print $1}' REQTICK); do echo "Chef-Runn status: " `ks -r fqdn:$i`;done
for i in server050101{a..b};do echo "Tag for hostname: $i `knife tag list $i.ex.local`";done
for i in $(awk 'NR%2==0 {print $1}' REQ); do echo "Uptime for hostname: $i `knife ssh name:$i "uptime"`";done
for i in $(awk 'NR%2==0 {print $1}' FAB); do echo "Uptime for A-node hostname: $i";done

:: XEN Server ::
systemctl status message-switch
xe-toolstack-restart
xe sr-list
xe vm-disk-list uuid=ccc57d57-ec7c-4d8e-0404
xe vm-list params=dom-id,resident-on name-label=servername
xe vm-list name-label=servername
xe vm-shutdown uuid=c09c889c-548a-45a6-afe3- force=true
list_domains
How to cleanly, yet forcibly shutdown VMs from command line
https://support.citrix.com/article/CTX220777

# kill -9 $(pidof java) || sync; echo 3 > /proc/sys/vm/drop_caches    ## sync - flush file system buffers
Examples:: https://docs.oracle.com/javase/8/docs/technotes/tools/unix/jstat.html
sudo ps aux | grep fisheye
sudo jmap -heap 22390
sudo ps aux | grep fisheye
sudo ps aux | grep java
sudo su -
pgrep -f java | wc -l
sudo -iu fisheye /usr/local/fisheye/latest/bin/stop.sh
pgrep -f java | wc -l
sudo -iu fisheye /usr/local/fisheye/latest/bin/start.sh
pgrep -f java | wc -l
top -b -n1 | head -15
sudo tailf /usr/local/fisheye/fisheye/var/log/fisheye.out
top -b -n1 | head -15
pgrep -f java | wc -l
sudo ps aux | grep java
sudo ps aux | grep fisheye
sudo jmap -heap 24374
sudo su -
sudo jmap -heap 24374
pgrep -f java | wc -l
pgrep -f java | xargs -r ps -wwo pid,user,start,command
sync; echo 3 > /proc/sys/vm/drop_caches    ## sync - flush file system buffers

top -n 1 -H -p 1201
top - 04:31:17 up 15 min,  3 users,  load average: 0.28, 0.35, 0.31
Threads:  68 total,   0 running,  68 sleeping,   0 stopped,   0 zombie
%Cpu(s):  3.2 us,  3.2 sy,  0.0 ni, 93.5 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
KiB Mem : 16253208 total, 13178624 free,  1906896 used,  1167688 buff/cache
KiB Swap:  3817468 total,  3817468 free,        0 used. 14052592 avail Mem

  PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND
 2611 root      20   0   13.3g   1.1g  25864 S  6.7  7.3   0:02.75 nioEventLoopGro
 1201 root      20   0   13.3g   1.1g  25864 S  0.0  7.3   0:00.02 java
 1294 root      20   0   13.3g   1.1g  25864 S  0.0  7.3   0:07.85 java

:: MegaRAID | storcli64  ::
sudo curl -u<username> -k -O "https://software.example.come/artifactory/server-freebsd/storcli64.tar"
rpm -ivh --prefix=/opt storcli-1.23.02-1.noarch.rpm

[root@localhost ~]# storcli64 /c0/e8/s8 show all | grep SN

[root@localhost ~]# history
     ipmitool user set name 2 ADMIN
     ipmitool user set password 2 <Admin Passwd>
     ipmitool lan print
     
     /opt/MegaRAID/storcli/storcli64 /c0 show all
     /opt/MegaRAID/storcli/storcli64 /c0/v0 delete
     /opt/MegaRAID/storcli/storcli64 /c0 show all
     /opt/MegaRAID/storcli/storcli64 /c0/e65/sall set good force
     /opt/MegaRAID/storcli/storcli64 /c0 show all
     /opt/MegaRAID/storcli/storcli64 /c0 add vd type=r1 drives=65:0,65:1
     /opt/MegaRAID/storcli/storcli64 /c0/e65/s2 add hotsparedrive dgs=0
     /opt/MegaRAID/storcli/storcli64 /c0 show all
     /opt/MegaRAID/storcli/storcli64 /c0 add vd type=r1 drives=65:3,65:4.65:5,65:6
     /opt/MegaRAID/storcli/storcli64 /c0 show all
     /opt/MegaRAID/storcli/storcli64 /c0 add vd type=r1 drives=65:3,65:4,65:5,65:6
     /opt/MegaRAID/storcli/storcli64 /c0/e65/s7 add hotsparedrive dgs=1
     /opt/MegaRAID/storcli/storcli64 /c0 show all

[root@localhost ~]# sudo /opt/MegaRAID/storcli/storcli64 /c0/e8/s3 show all |grep 'SN'
[root@localhost ~]# sudo /opt/MegaRAID/storcli/storcli64 /c0/e8/sall show all |grep 'SN'
[root@localhost ~]# sudo /opt/MegaRAID/storcli/storcli64 /c0 show | grep -A50  -E "VD LIST|PD LIST"
[root@localhost ~]# sudo /opt/MegaRAID/storcli/storcli64 /c0/e8/s2 delete hotsparedrive
[root@localhost ~]# sudo /opt/MegaRAID/storcli/storcli64 /c0/e8/s2 add hotsparedrive dgs=0
/opt/MegaRAID/storcli/storcli64 /c0 /eall /sall show all | grep -iE "det|cou|tem|SN|S.M|fir" 

/opt/MegaRAID/storcli/storcli64 /c0 /eall /sall show all | grep -P '(Det|Cou|S\.M|^SN)(?!.*\s(No|0)$)'

"foreign state”:: https://www.thomas-krenn.com/en/wiki/StorCLI_commands -  For Instrution…

[root@localhost ~]# date; sudo /opt/MegaRAID/storcli/storcli64 /c0/fall show
[root@localhost ~]# sudo /opt/MegaRAID/storcli/storcli64 /c0 /fall import

:: LOAD SNMP (crowdstrike) | SUnreclaim  | slabinfo ::
Good Condition:

[root@localhost ~]# lsmod | grep falcon
falcon_lsm_serviceable   980525  1
falcon_nf_netcontain    16495  1
falcon_kal             41139  1 falcon_lsm_serviceable
falcon_lsm_pinned_12504    63974  1
falcon_lsm_pinned_12104    58273  1
falcon_lsm_pinned_11711    58216  1
falcon_lsm_pinned_11710    58216  1

Bad Condition:

This is the Crowdstrike issue. Box needs to be rebooted
 
[root@localhost ~]# lsmod | grep falcon
falcon_lsm_serviceable  1091145  1
falcon_nf_netcontain    16495  1
falcon_kal             45235  1 falcon_lsm_serviceable
falcon_lsm_pinned_13109    89156  1
falcon_lsm_pinned_12504    63974  1
falcon_lsm_pinned_12104    58273  1
falcon_lsm_pinned_11711    58216  1
falcon_lsm_pinned_11710    58216  1
falcon_lsm_pinned_11611    58216  1
falcon_lsm_pinned_11610    58216  1
falcon_lsm_pinned_11312    42457  1
falcon_lsm_pinned_11308    42457  1
falcon_lsm_pinned_11307    42457  1
falcon_lsm_pinned_11110    42457  1
falcon_lsm_pinned_10913    42457  1
falcon_lsm_pinned_10912    42457  1
falcon_lsm_pinned_10807    30705  1
falcon_lsm_pinned_10805    30705  1

sudo ps -e | grep falcon-sensor  [CrowdStrike is running.]

# systemctl status falcon-sensor
● falcon-sensor.service
   Loaded: masked (/dev/null; bad)
   Active: failed (Result: signal) since Wed 2021-12-15 01:00:07 CST; 4 weeks 1 days ago
 Main PID: 8086 (code=killed, signal=KILL)

https://access.redhat.com/solutions/5953221
kmalloc-16 and kmalloc-64 slab leak observed in the system due to an issue with 'falcon_lsm_pinned_XXXXX' module.
Solution Verified - Updated November 5 2021 at 1:22 PM -
English
Issue
* The system is going into Out of memory situation due to slab usage growth.
* The issue has been observed after upgrading the system including falcon rpm as well.
Unreclaimable slab cache(kmalloc-16/kmalloc-64) usage keeps growing in the system. Raw # grep ^S /proc/meminfo  | tail -3
Slab:           57003944 kB
SReclaimable:     630612 kB
SUnreclaim:     56373332 kB

# cat /proc/slabinfo | awk '{printf "  %6i MB %s \n",$6*$15/256,$1}' | sort -nrk1 | head
   54941 MB kmalloc-16 
     180 MB xfs_inode 
     149 MB radix_tree_node 
     116 MB buffer_head 
      90 MB proc_inode_cache 

# cat /proc/slabinfo |awk '{printf "%7i MiB : %s\n",$6*$(NF-1)/256,$1}'|sort -nk 1 -r|head -5
   114092 MiB : kmalloc-64
    64526 MiB : kmalloc-16
          138 MiB : acfs_inode_cache
           95 MiB : acfs_buffer_cache_512
           87 MiB : xfs_inode

#
 [root@localhost ~]# yum history
Loaded plugins: product-id, search-disabled-repos, subscription-manager
ID     | Login user               | Date and time    | Action(s)      | Altered
-------------------------------------------------------------------------------

:: Single usermode ::
#IMP  #IMP 
https://tekneed.com/boot-to-single-user-mode-in-linux-rhel-centos-78/

STEP1: Second Method -> followed

STEP2: xfs_repaire -L /dev/dm-0 and /dev/dm-1 etc.,

https://www.thegeekdiary.com/how-to-boot-into-rescue-mode-or-emergency-mode-through-systemd-in-centos-rhel-7-and-8/

Devices: dm-0, dm-1 etc.,
### IMP ### 
Login to single user mode and then try following…
Unmount the drive.
xfs_repair -L /dev/xvda2

#
SSH is CRITICAL on socserver issues.


This host will need to be redeployed as /sysroot/ seems to be corrupted and /boot/ is not present, therefore the host cannot read the initramfs

https://www.thegeekdiary.com/input-output-errors-during-xfs-filesystem-access-in-centos-rhel-7/

#
- https://www.tecmint.com/boot-into-single-user-mode-in-centos-7/
- https://help.ubuntu.com/community/Grub2/Troubleshooting

CentOS 7.x
VSI
To reset the root password of a CentOS 7.x VSI, simply do the following -
* Log into the KVM
* Stop/Power Off the instance
* Power On the instance
* Watch it boot, catch the grub menu
* Press "e" to edit the grub menu entry
* Scroll down to the line starting with linux16
* Jump to the end, append rw init=/sysroot/bin/sh
* Press Ctrl+x to boot
* On command prompt, type chroot /sysroot
* Run passwd
* Type in the new password
* Confirm the new password
* type exit, to exit the chroot environment. type reboot
* Try logging into the server with the password to confirm change
* If this still does not allow you to log in, see the information in the "Stubborn Servers" section below in this article

Bare Metal
To reset the root password of a Cent OS 7.x bare metal, simply do the following -
* Log into the IPMI and load the KVM console
* Reboot the server
* Wait for the "Booting CentOS Linux press any key..." prompt and press ESC to force it to the GRUB menu
* Press E to edit the specified kernel
* Press down until you get to the line that starts with linux16 /vmlinuz and go to the end of that line
* Add the following: init=/bin/bash
* Press CTRL+X to boot the server
* The server should now be booted into bash mode without a prompt
* Remount / as read/write with the following: mount -o,remount,rw /
* passwd
* Type in the new password
* Confirm the new password
* Reset the server from the IPMI to have it boot up normal



#
Kernel::

https://netshop-isp.com.cy/blog/how-to-change-the-default-kernel-in-grub-for-rhel-and-centos/

grub2-set-default 1
cat /boot/grub2/grubenv | grep saved

grub2-mkconfig -o /boot/grub2/grub.cfg


[root@localhost ~]# rpm -qa kernel
kernel-4.18.0-477.15.1.el8_8.x86_64
kernel-4.18.0-477.21.1.el8_8.x86_64
kernel-4.18.0-372.9.1.el8.x86_64

[root@localhost ~]# yum list installed kernel
Updating Subscription Management repositories.
Installed Packages
kernel.x86_64                                                                  4.18.0-372.9.1.el8                                                                     @anaconda
kernel.x86_64                                                                  4.18.0-477.15.1.el8_8                                                                  @rhel-8-for-x86_64-baseos-rpms
kernel.x86_64                                                                  4.18.0-477.21.1.el8_8                                                                  @rhel-8-for-x86_64-baseos-rpms

[root@localhost ~]# rpm -qa | grep kernel | sort
kernel-4.18.0-372.9.1.el8.x86_64
kernel-4.18.0-477.15.1.el8_8.x86_64
kernel-4.18.0-477.21.1.el8_8.x86_64
kernelcare-2.80-1.el8.x86_64
kernel-core-4.18.0-372.9.1.el8.x86_64
kernel-core-4.18.0-477.15.1.el8_8.x86_64
kernel-core-4.18.0-477.21.1.el8_8.x86_64
kernel-devel-4.18.0-372.9.1.el8.x86_64
kernel-devel-4.18.0-477.15.1.el8_8.x86_64
kernel-devel-4.18.0-477.21.1.el8_8.x86_64
kernel-headers-4.18.0-477.21.1.el8_8.x86_64
kernel-modules-4.18.0-372.9.1.el8.x86_64
kernel-modules-4.18.0-477.15.1.el8_8.x86_64
kernel-modules-4.18.0-477.21.1.el8_8.x86_64
kernel-tools-4.18.0-477.21.1.el8_8.x86_64
kernel-tools-libs-4.18.0-477.21.1.el8_8.x86_64

[root@localhost ~]# grubby --info=ALL | grep ^kernel
kernel="/boot/vmlinuz-4.18.0-477.21.1.el8_8.x86_64"
kernel="/boot/vmlinuz-4.18.0-477.15.1.el8_8.x86_64"
kernel="/boot/vmlinuz-4.18.0-372.9.1.el8.x86_64"
kernel="/boot/vmlinuz-0-rescue-c47d5191458b46fab33a147d7c603c64"

[root@localhost ~]# uname -r
4.18.0-372.9.1.el8.x86_64


[root@localhost ~]# grubby --info="/boot/vmlinuz-4.18.0-477.15.1.el8_8.x86_64"
index=1
kernel="/boot/vmlinuz-4.18.0-477.15.1.el8_8.x86_64"
args="ro pcie_aspm=off crashkernel=auto resume=UUID=4f74420a-e176-495c-8c89-575b84f54c7f rhgb quiet audit=1 systemd.unified_cgroup_hierarchy=1 $tuned_params"
root="UUID=5c52c72e-ee16-467b-a9fe-bb6bb9860938"
initrd="/boot/initramfs-4.18.0-477.15.1.el8_8.x86_64.img $tuned_initrd"
title="Red Hat Enterprise Linux (4.18.0-477.15.1.el8_8.x86_64) 8.8 (Ootpa)"
id="c47d5191458b46fab33a147d7c603c64-4.18.0-477.15.1.el8_8.x86_64"
[root@localhost ~]# grubby --grub2 --default-title
Red Hat Enterprise Linux (4.18.0-477.21.1.el8_8.x86_64) 8.8 (Ootpa)
[root@suchitrautilitydal0901 ~]#

[root@localhost ~]# grubby --grub2 --default-title
Red Hat Enterprise Linux (4.18.0-477.21.1.el8_8.x86_64) 8.8 (Ootpa)

[root@localhost ~]# grubby --default-index
0
==============================
