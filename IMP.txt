-> IBBBM Prep Course:
https://ibm-cloud-prep.yourlearning.ibm.com

-> O'REILLY:
https://learning.oreilly.com/home-new/

:: ChatGPTT ::

-> Hands-on AWS Operations with ChatGPT
https://on24static.akamaized.net/event/44/24/93/6/rt/1/documents/resourceList1705933749020/handsonawsoperationswithchatgpt1116231705933749020.pdf

:: CHATGPT (Gerenative Pre-Trained Transformation) ::
-> Prompt-Engineering-for-Everyone-with-ChatGPT-and-GPT4
https://github.com/roshanahtina/Prompt-Engineering-for-Everyone-with-ChatGPT-and-GPT4
https://learning.oreilly.com/videos/prompt-engineering-for/9781805122005/9781805122005-video2_1/
-> https://github.com/roshanahtina/quick-start-guide-to-llms
-> https://github.com/PacktPublishing/Python-A-Z-Learn-Python-By-Building-15-Projects-and-ChatGPT

ChatGPT to Improve Your Writing:
-> https://on24static.akamaized.net/event/44/32/02/3/rt/1/documents/resourceList1706493041740/chatgptwriting6.pdf


-> REDHAT DOCS: 
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_for_real_time/8/html/optimizing_rhel_8_for_real_time_for_low_latency_operation/index
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9

-> luth-Linux Under The Hood
https://on24static.akamaized.net/event/43/46/99/7/rt/1/documents/resourceList1699274238616/luthnov231699274238616.pdf
https://on24static.akamaized.net/event/44/44/51/9/rt/1/documents/resourceList1708348548479/luth20241708348548479.pdf

-> Linux under the Hood Bootcamp
https://on24static.akamaized.net/event/46/89/37/2/rt/1/documents/resourceList1730818203257/luth3day1730818203257.pdf

-> Linux under the Hood [OR] Linux-Security
https://github.com/roshanahtina/Linux-Security/blob/main/resources.txt
https://on24static.akamaized.net/event/43/12/45/6/rt/1/documents/resourceList1699376138797/linsec.pdf

-> Linux Performance Optimization
https://on24static.akamaized.net/event/43/47/01/0/rt/1/documents/resourceList1698335954860/linuxperformance73231698335953946.pdf

-> Linux Troubleshooting
https://on24static.akamaized.net/event/43/47/02/6/rt/1/documents/resourceList1698935226186/linuxtroubleshooting613221698935226186.pdf
https://github.com/roshanahtina/Linux-Troubleshooting
 -> Fixing boot problem:
     Login Shell
     |
     Services
     | <- systemd.unit=rescue.target
     Early boot
     | <- systemd.unit=emergency.target
     init=systemd
     | <- rd.break (RH) 
     | <- init=/bin/bash
     initramfs kernel
     | 
     GRUB2
     | <- rescue disk
     Firmware (BIOS/EFI|UEFI)

-> Linux Fundamentals BootCamp:
https://on24static.akamaized.net/event/43/33/82/1/rt/1/documents/resourceList1697480993618/linuxfundamentals516231690989321545.pdf
https://on24static.akamaized.net/event/43/33/82/2/rt/1/documents/resourceList1697482662436/linuxfundamentals516231690989321545.pdf
https://on24static.akamaized.net/event/44/22/49/5/rt/1/documents/resourceList1705675763785/linuxfundamentals5162311705675763785.pdf

-> LINUX NETWORKING & SECURITY FUNDAMENTALS::
https://github.com/daveprowse/lnsf
https://on24static.akamaized.net/event/44/24/99/9/rt/1/documents/resourceList1706212346892/linkslnsfrevc1706212346892.pdf
https://on24static.akamaized.net/event/44/24/99/9/rt/1/documents/resourceList1706212334425/lnsfslidesday1revm1706212334425.pdf

-> Networking Fundamentals
https://on24static.akamaized.net/event/47/26/40/4/rt/1/documents/resourceList1732295686667/nfm1studentpacketpracnetnetv111720469741308.pdf

  LINUX NETWORKING & SECURITY FUNDAMENTALS - DAY TWO
  https://on24static.akamaized.net/event/44/25/00/1/rt/1/documents/resourceList1706212494999/lnsfslidesday2revh1706212494999.pdf

-> Linux Certification Labs Workshop
https://on24static.akamaized.net/event/44/74/31/9/rt/1/documents/resourceList1711625738804/examlabs20studentversion1711625738804.pdf

-> Mastering systemd:
https://on24static.akamaized.net/event/44/44/40/5/rt/1/documents/resourceList1706201782526/systemd512231706201782526.pdf

-> RHCSA Crash Course
https://on24static.akamaized.net/event/43/38/49/7/rt/1/documents/resourceList1698414414376/rhcsa911698414413682.pdf
https://on24static.akamaized.net/event/44/33/36/1/rt/1/documents/resourceList1706496181920/rhcsa911706496181920.pdf

-> *upcoming live courses*
https://github.com/roshanahtina/rhcsa/blob/master/resources.txt

https://learning.oreilly.com/videos/linux-fundamentals-2nd/9780137929313/

-> Ansible in 3 weeks
https://on24static.akamaized.net/event/43/11/60/3/rt/1/documents/resourceList1697541567561/ansiblein3weeksstudentversion3211697541565541.pdf


-> Bash Scripting in 4 Hours
https://on24static.akamaized.net/event/43/33/85/8/rt/1/documents/resourceList1698925382057/livebashscripting08231698925382057.pdf
-> Mastering-Bash-Shell-Scripting-Automate-your-daily-tasks
https://github.com/roshanahtina/Mastering-Bash-Shell-Scripting-Automate-your-daily-tasks/blob/main/Section%202/Assignment-01-Solution-Script/assignment01-report-solution.sh

-> https://learning.oreilly.com/videos/bash-shell-scripting/9780137689064/9780137689064-BSS2_01_03_01/
-> https://learning.oreilly.com/videos/complete-bash-shell/9781800209695/9781800209695-video18_1/
-> https://learning.oreilly.com/videos/bash-scripting-fundamentals/9780134541730/9780134541730-BSHF_00_00/
-> https://learning.oreilly.com/videos/learn-bash-shell/9781835080948/9781835080948-video1_1/
-> https://learning.oreilly.com/videos/mastering-linux-command/9781800204027/9781800204027-video14_1/


-> Master title style
https://on24static.akamaized.net/event/43/47/05/7/rt/1/documents/resourceList1699971479321/containerssep231699971479321.pdf

:: AWS ::
-> AWS Solutions Architect - Associate Certification Crash Course (SAA-C03):
https://on24static.akamaized.net/event/43/53/43/6/rt/1/documents/resourceList1699885803277/awssolutionsarchitectassociatecertificationsaac03latest1699885803277.pdf
https://github.com/arpcefxl/aws-saa-certification
-> AWS Certified Solutions Architect - Professional (SAP-C02):
https://learning.oreilly.com/course/aws-certified-solutions/9780138319205/ 
https://aws.amazon.com/well-architected-tool/
-><- AWS Cheat Sheets: https://tutorialsdojo.com/

-> aws-security-specialty-certification:
https://on24static.akamaized.net/event/43/59/42/4/rt/1/documents/resourceList1700506606961/awssecurityspecialtycertscsc02latestlive1700506606961.pdf

-> https://learning.oreilly.com/videos/amazon-web-services/9780137928521/9780137928521-AWS3_03_06_01/

-> Recommended preparation (AWS Certified Solutions Architect - Associate SAA-C03 Bootcamp):
(https://learning.oreilly.com/live-events/aws-certified-solutions-architect-associate-saa-c03-bootcamp/0636920055432/0636920099238/)

Week 1: Read the technical brief on AWS global infrastructure (website)
Week 2: Read the technical brief on AWS management services (website)
Week 3: Read the technical brief on AWS networking (website)
Week 4: Read the technical brief on AWS virtual servers (website)
Week 5: Read the technical brief on AWS storage (website)
Week 6: Read the technical brief on AWS Auto Scaling (website)
Recommended follow-up:

Read AWS Certified Solutions Architect Associate All-in-One Exam Guide, Second Edition (Exam SAA-C02)) (book)
Read Learning Amazon Web Services (AWS): A Hands-On Guide to the Fundamentals of the AWS Cloud (book)

-> AWS Event-Driven Automation and Operations
https://on24static.akamaized.net/event/43/59/41/5/rt/1/documents/resourceList1701089888800/awseventdrivenautomationandoperationslatest1701089888800.pdf
https://github.com/arpcefxl/aws-event-driven

-> AWS Certified AI Practitioner (AIF-C01)
https://on24static.akamaized.net/event/47/28/07/6/rt/1/documents/resourceList1733245300031/awsaipractitionercertcrashcourse1733245300031.pdf

-> RegEx:
https://learning.oreilly.com/library/view/mastering-regular-expressions/0596528124/
https://learning.oreilly.com/library/view/sed-awk/1565922255/

-> Paste Bin:
https://pastebin.com/jxEUv9Kc - CKA day1 oct 23
https://pastebin.com/TJtQjGDk - RHCSA nov23 day2
https://pastebin.com/mDGGV9H2 - scripting nov23

:: VMware ::
-> VMware Hands-on Labs
https://discovery.vmware.com/page/ds-hands-on-labs?menu=overview



:: Kubernetes ::
-> Securing Kubernetes for Production
https://on24static.akamaized.net/event/43/53/42/8/rt/1/documents/resourceList1700504792291/kubernetessecurity11700504792291.pdf
https://github.com/AdminTurnedDevOps/PearsonCourses/tree/main
https://us.norton.com/blog/emerging-threats/cybersecurity-statistics#:~:text=However%2C%20considering%20there%20are%20around,people%20being%20hacked%20per%20year
https://www.redhat.com/en/resources/state-kubernetes-security-report-2023
https://owasp.org/www-project-kubernetes-top-ten/
https://www.cisecurity.org/cis-benchmarks
https://www.cisecurity.org/benchmark/kubernetes
https://github.com/AdminTurnedDevOps/PearsonCourses/blob/main/Kubernetes-Security/Section3/lab/install-istio.md
https://docs.tigera.io/calico/latest/network-policy/encrypt-cluster-pod-traffic
https://kubernetes.io/docs/tasks/administer-cluster/kubeadm/kubeadm-upgrade/ https://learn.microsoft.com/en-us/azure/architecture/operator-guides/aks/aks-upgrade-practices https://platform9.com/blog/kubernetes-upgrade-the-definitive-guide-to-do-it-yourself/ https://learn.microsoft.com/en-us/azure/aks/upgrade-cluster?tabs=azure-cli
https://www.cvedetails.com/vulnerability-list/vendor_id-15867/product_id-34016/Kubernetes-Kubernetes.html
https://github.com/AdminTurnedDevOps/PearsonCourses/blob/main/Kubernetes-Security/Section4/lab/labinstructions.md
https://github.com/AdminTurnedDevOps/PearsonCourses/tree/main/Kubernetes-Security/Section5/lab
https://github.com/AdminTurnedDevOps/PearsonCourses/blob/main/Kubernetes-Security/Section6/lab/labinstructions.md

:: CKAD ::
https://github.com/roshanahtina/curriculum.git --  Curriculum

:: Certified Kubernetes Application Developer (CKAD) Crash Course ::
https://on24static.akamaized.net/event/44/73/09/6/rt/1/documents/resourceList1707496228567/ckad20231707496228567.pdf

Microservices:: RESOURCE.TXT
https://github.com/roshanahtina/microservices/blob/master/RESOURCE.TXT - KCNA, CKA, CKAD
# related labs
CKAD labs: https://learning.oreilly.com/playlists/ea6ea0fc-d8e2-422c-94dd-a0a8f608d224/
CKA lab: https://learning.oreilly.com/playlists/d6e3fe86-067c-4dc7-a36d-698802d0bdee/

:: Kubernetes in 4 Hours ::
https://on24static.akamaized.net/event/44/71/22/4/rt/1/documents/resourceList1708445347104/kubernetes.pdf
https://github.com/sandervanvugt/kubernetes

:: AZURE ::
Azure Fundamentals (AZ-900) Bootcamp:
-> https://on24static.akamaized.net/event/44/14/69/1/rt/1/documents/resourceList1704474576108/oreillyaz900slidedeckjan20241704474576108.pdf
-> https://on24static.akamaized.net/event/44/14/69/3/rt/1/documents/resourceList1704474643024/oreillyaz900slidedeckjan20241704474643024.pdf
-> https://github.com/zaalion/oreilly-az-900

Exam AZ-900: Microsoft Azure Fundamentals Crash Course
-> https://on24static.akamaized.net/event/45/06/79/5/rt/1/documents/resourceList1712595457340/az900crashcoursemayupdateday11170621688609611712595457340.pdf

AZ-104 Crash Course: Microsoft Certified Azure Administrator
-> https://on24static.akamaized.net/event/44/82/74/0/rt/1/documents/resourceList1712252009576/jan2024slides.pdf

Hands-On Azure for Beginners:
-> https://on24static.akamaized.net/event/42/35/26/0/rt/1/documents/resourceList1705446307004/week11705446307004.pdf
-> 

Azure Network Engineer Associate (AZ-700) Bootcamp:
-> https://on24static.akamaized.net/event/44/25/00/6/rt/1/documents/resourceList1705000059845/az700bootcamprezasalehi1705000059845.pdf



:: GIT ::
-> https://on24static.akamaized.net/event/43/59/37/3/rt/1/documents/resourceList1701126828143/git41labs1701126828143.pdf - Git in Four Weeks - Week 1
-> https://on24static.akamaized.net/event/43/59/37/3/rt/1/documents/resourceList1701126839079/git42labs1701126839079.pdf - Git in Four Weeks - Week 2
-> https://on24static.akamaized.net/event/43/59/37/3/rt/1/documents/resourceList1701043170963/gitin4weekspart11701043170963.pdf

- GIT In 4 Hours -
-> https://on24static.akamaized.net/event/44/50/53/3/rt/1/documents/resourceList1709566368125/gitin4weekspart11709566368125.pdf
-> https://github.com/skilldocs/git4/blob/main/git4-1-labs.pdf

:: CCNA ::
-> CCNA 200-301 Crash Course ( By Wendell Odom )
-> https://blog.certskills.com/ccc-study/ ->> "CCNA Crash Course – Study and Review"
-> https://blog.certskills.com/ccc-reference/  ->> "CCNA Crash Course – Reference"
-> https://on24static.akamaized.net/event/44/15/94/5/rt/1/documents/resourceList1704464355906/ccnaccday011704464355906.pdf
-> https://on24static.akamaized.net/event/44/15/94/7/rt/1/documents/resourceList1704467426451/ccnaccday021704467426451.pdf
-> https://on24static.akamaized.net/event/44/15/94/9/rt/1/documents/resourceList1704467339047/ccnaccday031704467339047.pdf
-> https://on24static.akamaized.net/event/44/15/95/1/rt/1/documents/resourceList1704467392287/ccnaccday041704467392287.pdf

-> CCNA <-
https://u.cisco.com/ - Welcome to Cisco U., Ros
https://learningnetwork.cisco.com/s/topic/0TO3i0000008jYHGAY/ccna-certification-community?t=1732173124695

:: Terraform ::
->> Terraform: Getting Started
-> https://on24static.akamaized.net/event/44/19/07/5/rt/1/documents/resourceList1705405699942/classterraformgetstarted1705405699942.pdf
-> https://gist.github.com/roshanahtina/f042ed1200d795e432df05723b9264b5

->> Next Level Terraform
-> https://on24static.akamaized.net/event/44/24/92/5/rt/1/documents/resourceList1705524646578/nextlevelterraform11705524646578.pdf
-> https://github.com/roshanahtina/terraform-live-template; https://github.com/roshanahtina/terraform-modules-template; https://github.com/roshanahtina/Next-Level-Terraform

-> Terraform Quick Start
https://on24static.akamaized.net/event/46/89/42/7/rt/1/documents/resourceList1731019174047/tfquickstartrevb1731019174047.pdf
https://github.com/roshanahtina/terraform-quickstart
https://discord.com/channels/790744308617445406/862334487370530816

-> RPMDB busted
sudo mkdir /var/lib/rpm/backup
sudo cp -a /var/lib/rpm/__db* /var/lib/rpm/backup/
sudo rm -f /var/lib/rpm/__db.[0-9][0-9]*
sudo rpm --quiet -qa; sudo rpm --rebuilddb; sudo yum clean all

-> SAR: dnf install sysstat -y
[root@~]# systemctl list-unit-files -t timer
UNIT FILE                      STATE    PRESET  
dnf-makecache.timer            enabled  enabled 
fstrim.timer                   disabled disabled
insights-client.timer          disabled disabled
logrotate.timer                enabled  enabled 
nm-cloud-setup.timer           enabled  disabled
sysstat-collect.timer          enabled  disabled
sysstat-summary.timer          enabled  disabled
systemd-sysupdate-reboot.timer disabled disabled
systemd-sysupdate.timer        disabled disabled
systemd-tmpfiles-clean.timer   static   -       

10 unit files listed.
[root@~ ~]# systemctl status sysstat-collect.timer
○ sysstat-collect.timer - Run system activity accounting tool every 10 minutes
     Loaded: loaded (/usr/lib/systemd/system/sysstat-collect.timer; enabled; p>
     Active: inactive (dead)
    Trigger: n/a
   Triggers: ● sysstat-collect.service
[root@ ~]# systemctl start sysstat-collect.timer
[root@ ~]# systemctl start sysstat-collect.service
[root@ ~]# systemctl status sysstat-collect.timer
● sysstat-collect.timer - Run system activity accounting tool every 10 minutes
     Loaded: loaded (/usr/lib/systemd/system/sysstat-collect.timer; enabled; p>
     Active: active (running) since Tue 2023-11-14 16:29:05 UTC; 1min 13s ago


:: FOR LOOP ::

for i in $(awk '{print $1}' REQFILE); do host $i; done
for i in $(awk 'NR%2==1 {print $1}' REQFILE\[gh\]); do dig NS $i.ser.example.com. +noall +answer; done
for i in $(awk 'NR%2==0 {print $1}' REQFILE); do host $i.ser.example.com.; done

:: CAT FILE ::
for ip in $(cat ip_list.txt); do echo "Pinging $ip..."; ping -c 4 $ip; done

while IFS= read -r ip; do
    echo "Pinging $ip..."
    ping -c 4 "$ip"
    echo
done < ip_list.txt or host_list.txt



:: NETWORK-SWITCH ::

Switchport descriptions
    sh int desc
    # sh int desc | inc servername
Switchport statistics
    sh int stat
    sh int stat | grep "Et3[78]"
    show interfaces Et12[or]43-48 status
ir01b.sr08.DCCODE#sh int stat | grep kickservername
is18.sr01.DCCODE#show interface Et44,Et43 switchport

Narrowing your output::
For MAC address lookups: 
sh mac add | inc xxxx.yyyy.dddd
is04.sr01.DCCODE# show mac address-table | include 0cc4.7a66.6130

#show interfaces status | grep testdccode0110
#show interface et14,et13 description
#show interface et13,et14 switchport
# 
Show mac address table, to confirm you that is the correct vlan (last 4 digits of Mac Address):
show mac address-table | include 3570
# 
Connect to kickstart server to get server’s IPMI/Server IP:
arp -a | grep 35:70 [OR] ip neigh | 

# arp
-bash: arp: command not found 
# yum list installed | grep net-tools
# yum install net-tools -y

switch LOG's:
———---———---
lb.l05#show log | grep "Ethernet45/1"
lb.l05#show log | grep "up"
lb.l05#
lb.l05#show log | grep "down"
lb.l05#show log | grep "Apr 27”
lb.l05#show log | grep "Apr 26"
Apr 26 17:24:30 slr01b.lon05 Acl: %ACL-6-IPACCES

#
Creating a VLAN:
m06.s01.c01# conf t
Enter configuration commands, one per line.  End with CNTL/Z.
m06.s01.c01(config)# vlan 40
m06.s01.c01(config-vlan)# sh vlan id 40

VLAN Name                             Status    Ports
---- -------------------------------- --------- -------------------------------
40   VLAN0040                         active    Po1, Eth1/1, Eth1/39, Eth1/46
                                         Eth1/47, Eth1/53, Eth1/54

VLAN Type  Vlan-mode
---- ----- ----------
40   enet  CE

Primary  Secondary  Type             Ports
-------  ---------  ---------------  -------------------------------------------

m06.s01.c01(config-vlan)# exit
m06.s01.c01(config)# exit
m06.s01.c01# exit

#
Change the switchport VLAN from to another
no switchport access vlan <port no>
switchport access vlan <port no>
no shutdown

STEP (1)
#configure terminal
#int Ethernet25
#shutdown
 
STEP (2)
#configure terminal
#default interface ethernet <port number> --> BUUUUUUUT be very careful


grep -riIF 2401:c900:2700:8800::1a /etc/sysconfig/network-scripts/
But a ps –ef shows different No, splunk is not running…
$ ps -ef|grep splunk|grep -v grep
Seems different processes have taken over these pids…
$ ps -ef|egrep "14371|14372"


ip -o -6 r sh dev eth0 | grep '\<metric 1\>'
default via 2401:c900:2700:8800::1 metric 1 pref medium

Route:
nmcli con edit eth2
ping -c 1 -I eth2 kickservername

nmcli con modify eth2 ipv4.gateway '172.1.1.1' OR
nmcli con modify eth2 ipv4.gateway ''
ssh  -l rmunavar -b 172.1.1.1 kickservername

##
SAVE the Changes in Switch::

is03.sr01.dccode#copy running-config startup-config
Destination filename [startup-config]?  ---->>> Just enter it
%Error copying nvram:y (Invalid argument)
is03.sr01.dccode#copy running-config startup-config
Destination filename [startup-config]?
Building configuration...
[OK]
0 bytes copied in 2.474 secs (0 bytes/sec)
is03.sr01.ams01#

is04.sr01.dccode# copy running-config startup-config
[########################################] 100%
Copy complete, now saving to disk (please wait)...
is04.sr01.dccode#


:: MYSQL DB QUERY::
# -> A
select host_name from services where host_name like 'kickservername%';
select host_name from services where host_name like '%';


# -> B
select host_name,id from hosts where host_name like 'kickservername%';
delete from hosts where host_name='kickservername.dccode' and id='1662';

select host_name,id from hosts where host_name like '%';
delete from hosts where host_name='' and id='';

# -> C
select id, datacenter,members, hostgroup_name, hostgroup_members from hostgroups where members like 'kickservername.dccode%';
update hostgroups set members = REPLACE(members,'kickservername.dccode','kickservername.') where members like 'kickservername.dccode%' and datacenter = 'ams01' and id=24;

select id, datacenter,members, hostgroup_name, hostgroup_members from hostgroups where members like '%';
update hostgroups set members = REPLACE(members,'','') where members like '%' and datacenter = '' and id=;


INSERT INTO hostgroups (datacenter, hostgroup_name, alias, members) VALUES ("wdc04","imsutil_servers","imsutil_servers","");

mysql> INSERT INTO hostgroups (datacenter, hostgroup_name, alias, members) VALUES ("wdc04","kickservername","kickservername","kickservernamed,kickservernamee,kickservernamef");
Query OK, 1 row affected (0.01 sec)

* update services set check_command = REPLACE(check_command, 'DISKSNMP!','DISKSNMPGENCOMMUNITY!') where host_name='server0302' and service_description like 'FILESYSTEM%';

* UPDATE services SET datacenter='tor02324'  where host_name like '%tosdsr04%' and datacenter!='tor02324' and host_name not like 'monitoring%';

* mysql> UPDATE services SET datacenter='tor02324'  where host_name like '%tor02324%' and datacenter!='tor04232' and host_name not like 'monitoring%';
Query OK, 17 rows affected (0.15 sec)
Rows matched: 17  Changed: 17  Warnings: 0

 327  cat FILESYSTEM-DATA.txt | grep -v -e 'NULL\|id\|datacenter\|use\|created\|updated\|row\|host_name' | sort -u
  328  cat FILESYSTEM-SLASH.txt | grep -v -e 'NULL\|id\|datacenter\|use\|created\|updated\|row\|host_name' | sort -u
  329  cat FILESYSTEM-TMP.txt | grep -v -e 'NULL\|id\|datacenter\|use\|created\|updated\|row\|host_name' | sort -u
  330  ls -ltrh
  331  cat FILESYSTEM-USR.txt | grep -v -e 'NULL\|id\|datacenter\|use\|created\|updated\|row\|host_name' | sort -u
  332  cat FILESYSTEM-VAR.txt | grep -v -e 'NULL\|id\|datacenter\|use\|created\|updated\|row\|host_name' | sort -u
  333  cat NESSUS.txt | grep -v -e 'NULL\|id\|datacenter\|use\|created\|updated\|row\|host_name' | sort -u
  334  cd ../shovel
  335  ll
  336  mysql -u root nagios -e "select * from services where host_name like 'server%' and service_description like 'PING%' \G " > PING.txt
  337  mysql -u root nagios -e "select * from services where host_name like 'server%' and service_description like 'DISKSNMP-ROOT%' \G " > DISKSNMP-ROOT.txt

# update hostgroups SET members = REPLACE(REPLACE(members,'kickservernamed',''),',-service','')  where members like '%kickservernamed%' and datacenter = 'terer02';

mysql> update hostgroups set members = 'kickservernamed,kickservernamee,kickservernamef' where id=1606;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

# INSERT INTO table_name (column_a, column_b) VALUES ("value_a", "value_b");

INSERT INTO hostgroups (datacenter, hostgroup_name, alias, members) VALUES ("s01","rhn_servers","RHN_SERVE","");

INSERT INTO hostgroups (datacenter, hostgroup_name, alias, members) VALUES ("s01","rhn_servers_mgmt","RHN_SERVE","");

mysql> select id, datacenter,members, hostgroup_name, hostgroup_members from hostgroups where hostgroup_name = 'kickservername_servers' and datacenter like 'DCCODE04%';
+------+------------+-------------------------------------------------+-----------------+-------------------+
| id   | datacenter | members                                         | hostgroup_name  | hostgroup_members |
+------+------------+-------------------------------------------------+-----------------+-------------------+
| 1606 | DCCODE04   | kickservernamed,kickservernamee,kickservernamef |    util_servers | NULL              |
+------+------------+-------------------------------------------------+-----------------+-------------------+
1 row in set (0.00 sec)

# INSERT INTO hosts (host_name, alias, address, hostgroups, datacenter,check_command, max_check_attempts, check_interval, retry_interval, check_period, contact_groups, notification_interval, first_notification_delay, notification_period, notification_options, notifications_enabled) VALUES ("parere04_cluster_mgmt","parere04_cluster","172.1.1.1","st-parere04", "parere04", "HOST", "2", "5", "1", "24x7", "storsys", "60", "0", "24x7", "d,u,r", "1");

mysql> select * from hosts where host_name like "st-dc0401_cluster_mgmt99%" \G
*************************** 1. row ***************************
                          id: 10230622
                  datacenter: parere04

#
MariaDB [nagios]> select id, datacenter, hostgroup_name, members, hostgroup_members from hostgroups where hostgroup_name like 'kickservername';
Empty set (0.00 sec)

MariaDB [nagios]>

:: KNIFE COMMADS ::
cat /etc/chef/base.json
cat /etc/chef/client.rb
cat ~/.chef/knife.rb
knife status 'hostname:server05*' -r
knife cookbook list | grep apt
knife cookbook list | grep yum
vim ../.chef/knife.rb
knife download /cookbooks/apt --dry-run
knife cookbook list | grep yum
knife ssl check
knife search server05.example.com
knife search -a server.nagios.nagios_config.service_check_timeout 'hostname:server05.example.com*'
knife search 'hostname:server05' | grep -E 'FQDN|Platform|IP|Role|Tags'
knife status 'hostname:*shell* AND role:*_base' -r | grep -v par
knife node show server05.example.com
knife node show frontend01 --format json -a ipaddress
knife node show frontend01 --format json
Knife SET ROLE command:
knife node run_list set server05.ex.local 'role[role_base]'
knife status -r 'hostname:server05*'
chef-client -o 'recipe[ohai],recipe[autodiscovery]' || systemctl reload nginx
for node in server05{a..d}.exa.local ; do knife node run_list set ${node} role[server05_sudo] ;done
while read n; do ping $n -c 1; done < server05.txt 
for i in $(awk 'NR%2==1 {print $1}' REQTICK); do echo "Chef-Runn status: " `ks -r fqdn:$i`;done
for i in server050101{a..b};do echo "Tag for hostname: $i `knife tag list $i.ex.local`";done
for i in $(awk 'NR%2==0 {print $1}' REQ); do echo "Uptime for hostname: $i `knife ssh name:$i "uptime"`";done
for i in $(awk 'NR%2==0 {print $1}' FAB); do echo "Uptime for A-node hostname: $i";done

:: XEN Server ::
systemctl status message-switch
xe-toolstack-restart
xe sr-list
xe vm-disk-list uuid=ccc57d57-ec7c-4d8e-0404
xe vm-list params=dom-id,resident-on name-label=servername
xe vm-list name-label=servername
xe vm-shutdown uuid=c09c889c-548a-45a6-afe3- force=true
list_domains
How to cleanly, yet forcibly shutdown VMs from command line
https://support.citrix.com/article/CTX220777

# kill -9 $(pidof java) || sync; echo 3 > /proc/sys/vm/drop_caches    ## sync - flush file system buffers
Examples:: https://docs.oracle.com/javase/8/docs/technotes/tools/unix/jstat.html
sudo ps aux | grep fisheye
sudo jmap -heap 22390
sudo ps aux | grep fisheye
sudo ps aux | grep java
sudo su -
pgrep -f java | wc -l
sudo -iu fisheye /usr/local/fisheye/latest/bin/stop.sh
pgrep -f java | wc -l
sudo -iu fisheye /usr/local/fisheye/latest/bin/start.sh
pgrep -f java | wc -l
top -b -n1 | head -15
sudo tailf /usr/local/fisheye/fisheye/var/log/fisheye.out
top -b -n1 | head -15
pgrep -f java | wc -l
sudo ps aux | grep java
sudo ps aux | grep fisheye
sudo jmap -heap 24374
sudo su -
sudo jmap -heap 24374
pgrep -f java | wc -l
pgrep -f java | xargs -r ps -wwo pid,user,start,command
sync; echo 3 > /proc/sys/vm/drop_caches    ## sync - flush file system buffers

top -n 1 -H -p 1201
top - 04:31:17 up 15 min,  3 users,  load average: 0.28, 0.35, 0.31
Threads:  68 total,   0 running,  68 sleeping,   0 stopped,   0 zombie
%Cpu(s):  3.2 us,  3.2 sy,  0.0 ni, 93.5 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
KiB Mem : 16253208 total, 13178624 free,  1906896 used,  1167688 buff/cache
KiB Swap:  3817468 total,  3817468 free,        0 used. 14052592 avail Mem

  PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND
 2611 root      20   0   13.3g   1.1g  25864 S  6.7  7.3   0:02.75 nioEventLoopGro
 1201 root      20   0   13.3g   1.1g  25864 S  0.0  7.3   0:00.02 java
 1294 root      20   0   13.3g   1.1g  25864 S  0.0  7.3   0:07.85 java

:: MegaRAID | storcli64  ::
sudo curl -u<username> -k -O "https://software.example.come/artifactory/server-freebsd/storcli64.tar"
rpm -ivh --prefix=/opt storcli-1.23.02-1.noarch.rpm

[root@localhost ~]# storcli64 /c0/e8/s8 show all | grep SN

[root@localhost ~]# history
     ipmitool user set name 2 ADMIN
     ipmitool user set password 2 <Admin Passwd>
     ipmitool lan print
     
     /opt/MegaRAID/storcli/storcli64 /c0 show all
     /opt/MegaRAID/storcli/storcli64 /c0/v0 delete
     /opt/MegaRAID/storcli/storcli64 /c0 show all
     /opt/MegaRAID/storcli/storcli64 /c0/e65/sall set good force
     /opt/MegaRAID/storcli/storcli64 /c0 show all
     /opt/MegaRAID/storcli/storcli64 /c0 add vd type=r1 drives=65:0,65:1
     /opt/MegaRAID/storcli/storcli64 /c0/e65/s2 add hotsparedrive dgs=0
     /opt/MegaRAID/storcli/storcli64 /c0 show all
     /opt/MegaRAID/storcli/storcli64 /c0 add vd type=r1 drives=65:3,65:4.65:5,65:6
     /opt/MegaRAID/storcli/storcli64 /c0 show all
     /opt/MegaRAID/storcli/storcli64 /c0 add vd type=r1 drives=65:3,65:4,65:5,65:6
     /opt/MegaRAID/storcli/storcli64 /c0/e65/s7 add hotsparedrive dgs=1
     /opt/MegaRAID/storcli/storcli64 /c0 show all

[root@localhost ~]# sudo /opt/MegaRAID/storcli/storcli64 /c0/e8/s3 show all |grep 'SN'
[root@localhost ~]# sudo /opt/MegaRAID/storcli/storcli64 /c0/e8/sall show all |grep 'SN'
[root@localhost ~]# sudo /opt/MegaRAID/storcli/storcli64 /c0 show | grep -A50  -E "VD LIST|PD LIST"
[root@localhost ~]# sudo /opt/MegaRAID/storcli/storcli64 /c0/e8/s2 delete hotsparedrive
[root@localhost ~]# sudo /opt/MegaRAID/storcli/storcli64 /c0/e8/s2 add hotsparedrive dgs=0
/opt/MegaRAID/storcli/storcli64 /c0 /eall /sall show all | grep -iE "det|cou|tem|SN|S.M|fir" 

/opt/MegaRAID/storcli/storcli64 /c0 /eall /sall show all | grep -P '(Det|Cou|S\.M|^SN)(?!.*\s(No|0)$)'

"foreign state”:: https://www.thomas-krenn.com/en/wiki/StorCLI_commands -  For Instrution…

[root@localhost ~]# date; sudo /opt/MegaRAID/storcli/storcli64 /c0/fall show
[root@localhost ~]# sudo /opt/MegaRAID/storcli/storcli64 /c0 /fall import

:: LOAD SNMP (crowdstrike) | SUnreclaim  | slabinfo ::
Good Condition:

[root@localhost ~]# lsmod | grep falcon
falcon_lsm_serviceable   980525  1
falcon_nf_netcontain    16495  1
falcon_kal             41139  1 falcon_lsm_serviceable
falcon_lsm_pinned_12504    63974  1
falcon_lsm_pinned_12104    58273  1
falcon_lsm_pinned_11711    58216  1
falcon_lsm_pinned_11710    58216  1

Bad Condition:

This is the Crowdstrike issue. Box needs to be rebooted
 
[root@localhost ~]# lsmod | grep falcon
falcon_lsm_serviceable  1091145  1
falcon_nf_netcontain    16495  1
falcon_kal             45235  1 falcon_lsm_serviceable
falcon_lsm_pinned_13109    89156  1
falcon_lsm_pinned_12504    63974  1
....Snipped....

sudo ps -e | grep falcon-sensor  [CrowdStrike is running.]

# systemctl status falcon-sensor
● falcon-sensor.service
   Loaded: masked (/dev/null; bad)
   Active: failed (Result: signal) since Wed 2021-12-15 01:00:07 CST; 4 weeks 1 days ago
 Main PID: 8086 (code=killed, signal=KILL)

https://access.redhat.com/solutions/5953221
kmalloc-16 and kmalloc-64 slab leak observed in the system due to an issue with 'falcon_lsm_pinned_XXXXX' module.
Solution Verified - Updated November 5 2021 at 1:22 PM -
English
Issue
* The system is going into Out of memory situation due to slab usage growth.
* The issue has been observed after upgrading the system including falcon rpm as well.
Unreclaimable slab cache(kmalloc-16/kmalloc-64) usage keeps growing in the system. Raw # grep ^S /proc/meminfo  | tail -3
Slab:           57003944 kB
SReclaimable:     630612 kB
SUnreclaim:     56373332 kB

# cat /proc/slabinfo | awk '{printf "  %6i MB %s \n",$6*$15/256,$1}' | sort -nrk1 | head
   54941 MB kmalloc-16 
     180 MB xfs_inode 
     149 MB radix_tree_node 
     116 MB buffer_head 
      90 MB proc_inode_cache 

# cat /proc/slabinfo |awk '{printf "%7i MiB : %s\n",$6*$(NF-1)/256,$1}'|sort -nk 1 -r|head -5
   114092 MiB : kmalloc-64
    64526 MiB : kmalloc-16
          138 MiB : acfs_inode_cache
           95 MiB : acfs_buffer_cache_512
           87 MiB : xfs_inode

#
 [root@localhost ~]# yum history
Loaded plugins: product-id, search-disabled-repos, subscription-manager
ID     | Login user               | Date and time    | Action(s)      | Altered
-------------------------------------------------------------------------------

:: Single usermode ::
#IMP  #IMP 
https://tekneed.com/boot-to-single-user-mode-in-linux-rhel-centos-78/

STEP1: Second Method -> followed

STEP2: xfs_repaire -L /dev/dm-0 and /dev/dm-1 etc.,

https://www.thegeekdiary.com/how-to-boot-into-rescue-mode-or-emergency-mode-through-systemd-in-centos-rhel-7-and-8/

Devices: dm-0, dm-1 etc.,
### IMP ### 
Login to single user mode and then try following…
Unmount the drive.
xfs_repair -L /dev/xvda2

#
SSH is CRITICAL on socserver issues.


This host will need to be redeployed as /sysroot/ seems to be corrupted and /boot/ is not present, therefore the host cannot read the initramfs

https://www.thegeekdiary.com/input-output-errors-during-xfs-filesystem-access-in-centos-rhel-7/

#
- https://www.tecmint.com/boot-into-single-user-mode-in-centos-7/
- https://help.ubuntu.com/community/Grub2/Troubleshooting

CentOS 7.x
VSI
To reset the root password of a CentOS 7.x VSI, simply do the following -
* Log into the KVM
* Stop/Power Off the instance
* Power On the instance
* Watch it boot, catch the grub menu
* Press "e" to edit the grub menu entry
* Scroll down to the line starting with linux16
* Jump to the end, append rw init=/sysroot/bin/sh
* Press Ctrl+x to boot
* On command prompt, type chroot /sysroot
* Run passwd
* Type in the new password
* Confirm the new password
* type exit, to exit the chroot environment. type reboot
* Try logging into the server with the password to confirm change
* If this still does not allow you to log in, see the information in the "Stubborn Servers" section below in this article

Bare Metal
To reset the root password of a Cent OS 7.x bare metal, simply do the following -
* Log into the IPMI and load the KVM console
* Reboot the server
* Wait for the "Booting CentOS Linux press any key..." prompt and press ESC to force it to the GRUB menu
* Press E to edit the specified kernel
* Press down until you get to the line that starts with linux16 /vmlinuz and go to the end of that line
* Add the following: init=/bin/bash
* Press CTRL+X to boot the server
* The server should now be booted into bash mode without a prompt
* Remount / as read/write with the following: mount -o,remount,rw /
* passwd
* Type in the new password
* Confirm the new password
* Reset the server from the IPMI to have it boot up normal



#
Kernel::

https://netshop-isp.com.cy/blog/how-to-change-the-default-kernel-in-grub-for-rhel-and-centos/

grub2-set-default 1
cat /boot/grub2/grubenv | grep saved

grub2-mkconfig -o /boot/grub2/grub.cfg


[root@localhost ~]# rpm -qa kernel
kernel-4.18.0-477.15.1.el8_8.x86_64
kernel-4.18.0-477.21.1.el8_8.x86_64
kernel-4.18.0-372.9.1.el8.x86_64

[root@localhost ~]# yum list installed kernel
Updating Subscription Management repositories.
Installed Packages
kernel.x86_64                                                                  4.18.0-372.9.1.el8                                                                     @anaconda
kernel.x86_64                                                                  4.18.0-477.15.1.el8_8                                                                  @rhel-8-for-x86_64-baseos-rpms
kernel.x86_64                                                                  4.18.0-477.21.1.el8_8                                                                  @rhel-8-for-x86_64-baseos-rpms

[root@localhost ~]# rpm -qa | grep kernel | sort
kernel-4.18.0-372.9.1.el8.x86_64
kernel-4.18.0-477.15.1.el8_8.x86_64
kernel-4.18.0-477.21.1.el8_8.x86_64
kernelcare-2.80-1.el8.x86_64
kernel-core-4.18.0-372.9.1.el8.x86_64
kernel-core-4.18.0-477.15.1.el8_8.x86_64
kernel-core-4.18.0-477.21.1.el8_8.x86_64
kernel-devel-4.18.0-372.9.1.el8.x86_64
kernel-devel-4.18.0-477.15.1.el8_8.x86_64
kernel-devel-4.18.0-477.21.1.el8_8.x86_64
kernel-headers-4.18.0-477.21.1.el8_8.x86_64
kernel-modules-4.18.0-372.9.1.el8.x86_64
kernel-modules-4.18.0-477.15.1.el8_8.x86_64
kernel-modules-4.18.0-477.21.1.el8_8.x86_64
kernel-tools-4.18.0-477.21.1.el8_8.x86_64
kernel-tools-libs-4.18.0-477.21.1.el8_8.x86_64

[root@localhost ~]# grubby --info=ALL | grep ^kernel
kernel="/boot/vmlinuz-4.18.0-477.21.1.el8_8.x86_64"
kernel="/boot/vmlinuz-4.18.0-477.15.1.el8_8.x86_64"
kernel="/boot/vmlinuz-4.18.0-372.9.1.el8.x86_64"
kernel="/boot/vmlinuz-0-rescue-c47d5191458b46fab33a147d7c603c64"

[root@localhost ~]# uname -r
4.18.0-372.9.1.el8.x86_64


[root@localhost ~]# grubby --info="/boot/vmlinuz-4.18.0-477.15.1.el8_8.x86_64"
index=1
kernel="/boot/vmlinuz-4.18.0-477.15.1.el8_8.x86_64"
args="ro pcie_aspm=off crashkernel=auto resume=UUID=4f74420a-e176-495c-8c89-575b84f54c7f rhgb quiet audit=1 systemd.unified_cgroup_hierarchy=1 $tuned_params"
root="UUID=5c52c72e-ee16-467b-a9fe-bb6bb9860938"
initrd="/boot/initramfs-4.18.0-477.15.1.el8_8.x86_64.img $tuned_initrd"
title="Red Hat Enterprise Linux (4.18.0-477.15.1.el8_8.x86_64) 8.8 (Ootpa)"
id="c47d5191458b46fab33a147d7c603c64-4.18.0-477.15.1.el8_8.x86_64"
[root@localhost ~]# grubby --grub2 --default-title
Red Hat Enterprise Linux (4.18.0-477.21.1.el8_8.x86_64) 8.8 (Ootpa)
[root@suchitrautilitydal0901 ~]#

[root@localhost ~]# grubby --grub2 --default-title
Red Hat Enterprise Linux (4.18.0-477.21.1.el8_8.x86_64) 8.8 (Ootpa)

[root@localhost ~]# grubby --default-index
0
==============================
ipmilan tool print

:: GIT CMD ::

Clone the REPO
-- git checkout master
-- git checkout -b TICKET-123
-- git pull 
-- git add filename.json
-- git commit -m " my first filename databag addtion to stash"
-- git push  --- link for PR 
-- use PR link update on stash for title and description and key reviewer  and submit

:: KeepAlived/Kickstart ::
---
- name: Restart gracefully KeepAlived on Kickstarts
  hosts: kickstarts
  gather_facts: true

  tasks:

    - name: Get Services Facts.
      ansible.builtin.service_facts:

    - name: Show Services Status.
      ansible.builtin.debug:
        msg:
          - "keepalived: {{ ansible_facts['services'][item]['state'] }}"
      when:
        - ansible_facts['services'][item]['state'] == "running"
      with_items:
        - "keepalived.service"

    - name: Restart KeepAlived Service on Node A.
      ansible.builtin.systemd:
        name: keepalived.service
        state: restarted
      when: inventory_hostname is match('.*a$')

    - name: Restart KeepAlived Service on Node B.
      ansible.builtin.systemd:
        name: keepalived.service
        state: restarted
      when: inventory_hostname is match('.*b$')

    - name: Check host IP address.
      debug:
        msg: "The host IP address matches the pattern startswith(161.26.)."
      when: item.startswith('161.26.')
      loop: "{{ ansible_all_ipv4_addresses }}"
...

---
- name: Monitor VIP and Check Status of KeepaliveD
  hosts: kickstarts
  become: yes
  gather_facts: True
​
  vars:
    vip_interface: eth0
#    vip_address: 100.66.1.20
​
  tasks:
​
    - name: Verify VIP IP Address.
      ansible.builtin.command: dig @100.64.18.20 {{ app_id }}.sllab.local +noall +short
      register: vip_address
​
    - name: Show Output.
      ansible.builtin.debug:
        var: vip_address['stdout']
​
    - name: Check if VIP is primary or secondary address
      ansible.builtin.set_fact:
        vip_assigned: "{{ vip_address['stdout'] == ansible_eth0['ipv4']['address'] or
                          vip_address['stdout'] in (ansible_eth0['ipv4_secondaries'] | map(attribute='address') | list) }}"
​
    - name: Check if VIP is primary or secondary address
      ansible.builtin.set_fact:
        vip_assigned: "{{ vip_address['stdout'] == ansible_eth0['ipv4']['address'] or
                          (ansible_eth0['ipv4_secondaries'] is defined and vip_address['stdout'] in ansible_eth0['ipv4_secondaries'] | map(attribute='address') | list) }}"
      when: ansible_eth0['ipv4'] is defined
​
    - name: Assert VIP Status
      ansible.builtin.assert:
        that:
          - vip_assigned
        fail_msg: "VIP {{ vip_address['stdout'] }} is NOT assigned to the interface {{ vip_interface }}"
        success_msg: "VIP {{ vip_address['stdout'] }} IT IS assigned to the interface {{ vip_interface }}"
      ignore_errors: yes
​
    - name: Restart (or Status) KeepaliveD On The Current Master Node.
      ansible.builtin.systemd:
        name: keepalived.service
        state: started
      when: vip_assigned | default(false)
      register: keepalived_status
      tags: never
​
    - name: Gather KeepaliveD service facts
      ansible.builtin.service_facts:
​
    - name: Assert KeepaliveD Status
      ansible.builtin.assert:
        that:
          - ansible_facts['services']['keepalived.service']['state'] == 'running'
        fail_msg: "KeepaliveD service is NOT running!"
        success_msg: "KeepaliveD service is running!"
...

:: Multipath ::
https://doyensys.com/blogs/ora-15040-diskgroup-is-incomplete/
#
journalctl -u multipathd.service

systemctl status multipathd.service

systemctl restart multipathd.service

systemctl status multipathd.service

cat /etc/multipath.conf

iscsiadm -m session

# iscsiadm -m discovery -t st -p 10.200.120.20
# iscsiadm -m node -l
# cd /dev/mapper/
# ls -ltrh
total 0
crw-------. 1 root root 10, 236 May 24 21:38 control
lrwxrwxrwx. 1 root root       7 May 24 21:38 vg_root-swap -> ../dm-1
lrwxrwxrwx. 1 root root       7 May 24 21:38 vg_root-root -> ../dm-0
# iscsiadm -m discovery -t st -p 10.200.120.20
# iscsiadm -m node -l
# iscsiadm -m session
We did those:
# oracleasm status
Checking if ASM is loaded: yes
Checking if /dev/oracleasm is mounted: no
# oracleasm init
Mounting ASMlib driver filesystem: /dev/oracleasm
# oracleasm status
Checking if ASM is loaded: yes
Checking if /dev/oracleasm is mounted: yes
# oracleasm scandisks
Reloading disk partitions: done
Cleaning any stale ASM disks...
Scanning system for ASM disks...
Instantiating disk "DATA1"
Instantiating disk "DATA3"
Instantiating disk "DATA8"
Instantiating disk "DATA4"
# oracleasm listdisks
DATA1
DATA10
DATA11

:: LVM | FSCK | XFS_REPAIR ::
pvdisplay
lvdisplay
pwd
pvs
lvs
ls /dev
cd /dev
cd vg_pgsql/
ls -l
date
uptime
df -h
mount
lvextend -L +100GB /dev/mapper/vg_pgsql-pg11_archive
xfs_growfs /var/lib/pgsql/11/archive
df -h
vgdisplay
df -h
history |grep lvex
lvextend -L +500GB /dev/mapper/vg_pgsql-pg11_archive
df -h
lvdisplay | less
history | less
xfs_growfs /var/lib/pgsql/11/archive
xfs_repair -L /dev/mapper/vg_special-lv_special

# journalctl --dmesg

:: Apache ::
# apachectl configtest
Syntax OK
# httpd -S
# httpd -t
Syntax

:: kswapd | KSWAPD | Memory ::
———————————————————————
https://www.linode.com/community/questions/18027/high-cpu-from-kswapd0

The process you referred to, kswapd0, manages virtual memory and may be having issues due to moving processes to SWAP too frequently, causing cpu spikes and decreased system performance.

You can view and analyze your settings affecting this behavior with the following:

This is where you determine when processes are moved to swap: $ sudo cat /etc/sysctl.conf

To understand this file better, see this man page for sysctl.conf

These files affect your virtual memory performance: $ sudo cat /proc/sys/vm/swappiness $ sudo cat /proc/sys/vm/vfs_cache_pressure $ sudo cat /sys/kernel/mm/transparent_hugepage/enabled $ sudo cat /proc/sys/vm/drop_caches

To understand these settings before you adjust them, see this documentation for virtual memory.

We've seen this issue mitigated different ways, but taking all three steps in order also seems to keep it from re-occuring:
Reconfigure /etc/sysctl.conf to require a higher Ram threshold before moving processes to swap. 

This command will set process to SWAP only if you've exhausted RAM: $ sudo echo vm.swappiness=$VALUE | sudo tee -a /etc/sysctl.conf

If swappiness=0, the SWAP disk will be avoided unless absolutely necessary (you run out of RAM completely), 
and if swappiness=100, programs will be sent to SWAP almost instantly.

Set /proc/sys/vm/drop_caches to 1
 $ sudo echo 1 > /proc/sys/vm/drop_caches

Reboot for the setting changes to take effect and clear SWAP as you observed previously.

=======
https://www.kernel.org/doc/Documentation/sysctl/vm.txt
#
swappiness ::

This control is used to define how aggressive the kernel will swap
memory pages.  Higher values will increase aggressiveness, lower values
decrease the amount of swap.  A value of 0 instructs the kernel not to
initiate swap until the amount of free and file-backed pages is less
than the high water mark in a zone.

The default value is 60.

==========
#
drop_caches ::

Writing to this will cause the kernel to drop clean caches, as well as
reclaimable slab objects like dentries and inodes.  Once dropped, their
memory becomes free.

To free pagecache:
	echo 1 > /proc/sys/vm/drop_caches
To free reclaimable slab objects (includes dentries and inodes):
	echo 2 > /proc/sys/vm/drop_caches
To free slab objects and pagecache:
	echo 3 > /proc/sys/vm/drop_caches

This is a non-destructive operation and will not free any dirty objects.
To increase the number of objects freed by this operation, the user may run
`sync' prior to writing to /proc/sys/vm/drop_caches.  This will minimize the
number of dirty objects on the system and create more candidates to be
dropped.

This file is not a means to control the growth of the various kernel caches
(inodes, dentries, pagecache, etc...)  These objects are automatically
reclaimed by the kernel when memory is needed elsewhere on the system.

Use of this file can cause performance problems.  Since it discards cached
objects, it may cost a significant amount of I/O and CPU to recreate the
dropped objects, especially if they were under heavy use.  Because of this,
use outside of a testing or debugging environment is not recommended.

You may see informational messages in your kernel log when this file is
used:

	cat (1234): drop_caches: 3

These are informational only.  They do not mean that anything is wrong
with your system.  To disable them, echo 4 (bit 2) into drop_caches.

=======

Checked formatting of swap

I tried:

swapoff /dev/sda2

mkswap /dev/sda2 with no errors and

swapon /dev/sda2

kswapd0 is still running full steam ahead.


#
Times to times I must give "killall -9 kswapd0" to delete it.

i managed to get some logs when kswapd is starting to go rogue:
see my attachments to this bug: sysctl, dmesg, meminfo


==============================================================

:: DISK SPACE ::

$ 2>/dev/null sudo du -sh /var/log/* | sort -hrk1 | head
$ 2>/dev/null sudo du -sh /data/* | sort -hrk1 | head
$ 2>/dev/null sudo du -sh /home/* | sort -hrk1 | head

* $ sudo /usr/bin/du -h --max-depth=1 /home/ | egrep "^[0-9]+(\.[0-9]+)?" | sort -h -r > $OUTFILE

* sudo du -xhm /home --max-depth=1 /home/ | sort -r -n | head -n 10

* $ sudo du -h --max-depth=1 /home/ | sort -hr | head -n 20
         3.3G /home/
         538M /home/a
         346M /home/b
         241M /home/c

 * $ sudo du -sch /var/log/devices/vpn.log-2019* | grep total [OR] |  wc -l
       71G     total

$ sudo du -h --block-size=1M --threshold=100M --max-depth=1 /home/ | sort -hr | awk '{printf "%5.1fG %s\n", $1/1024, $2}' | sed -n '1!p'
      0.4G /home/abc
      0.3G /home/def

# 2>/dev/null sudo du -sh /home/shared/* | sort -hrk1 | head
449G    /home/shared/Logs
# 2>/dev/null sudo du -sh /home/shared/Logs/* | sort -hrk1 | head
29G     /home/Logs/20210303

$ 2>/dev/null sudo du -sh /home/* | sort -hrk1 | head -40
544G    /home/rabbit
181G    /home/regret
131G    /home/jnuke

$ sudo du -h --threshold=100M /home/ | sort -h
105M	/home/rose/patch_downloads
181M	/home/tiger/testing

* yum clean all

# How can a log program continue to log to a deleted file?
https://unix.stackexchange.com/questions/146929/how-can-a-log-program-continue-to-log-to-a-deleted-file

# How to recover deleted file if it is still opened by some process?
https://superuser.com/questions/283102/how-to-recover-deleted-file-if-it-is-still-opened-by-some-process

# truncate — truncate a file to a specified length

* cat /dev/null > filename

* echo -n > filename

* echo -n > filename

* truncate -s 1G rabbit\@file.log -> After truncate the file to 1GB

    [root@file ]# du -sch rabbit@file.log rabbit@file-sl.log
    24G     rabbit@file.log
    17G     rabbit@file-sl.log
    40G     total
    [root@file ]# truncate -s 1G rabbit\@file.log
    [root@file ]# du -sch rabbit@file.log rabbit@file-sl.log
    1.1G    file.log
    17G     filesl.log
    18G     total

The -s 0 option sets the file size to zero.
For example, to empty the Nginx access log you would use:
sudo truncate -s 0 /var/log/nginx/access.log

The following command will empty files ending with “.log” under the /var/log directory:
sudo truncate -s 0 /var/log/**/*.log 

# To Clean Up The Content In A File:

> /path/to/the/file.txt

gzip -9 <file name>

:: ChatGPTT ::
https://platform.openai.com/overview
https://chat.openai.com
●
Suggest fun activities
for a team-building day with remote employees
●
for a family of 4 to do indoors on a rainy day
●
Brainstorm names
for an orange cat we're adopting from the shelter
●
for my fantasy football team
●
Write a text
asking a friend to be my plus-one at a wedding
●
that goes with a kitten gif for a friend having a rough day
●
Draft an email
to request a quote from local plumbers
●
requesting a deadline extension for my project
●
Write a thank-you note
to my interviewer
●
to our babysitter for the last-minute help
●
Plan a trip
to experience Seoul like a local
●
to see the northern lights in Norway
●
Summarize this article
into three key points
●
as a table of pros and cons
●
Improve my post
for hiring a store associate
●
for selling a used vacuum in good condition
●
Help me debug
why the linked list appears empty after I've reversed it
●
a Python script automating daily reports
●
Recommend a dish
to impress a date who's a picky eater
●
to bring to a potluck
●
Give me ideas
for what to do with my kids' art
●
for a customer loyalty program in a small bookstore
●
Help me pick
an outfit that will look good on camera
●
a gift for my dad who loves fishing

● ChatGPT ●

